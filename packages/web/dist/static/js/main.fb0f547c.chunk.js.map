{"version":3,"sources":["modules/servers/CreateServer.module.css","components/ui/SelectCoreOption/SelectCoreOption.module.css","components/ui/SelectOption/SelectOption.module.css","components/ui/Tab/Tab.module.css","components/ui/SelectIcon/SelectIcon.module.css","components/ui/Button/Button.module.css","components/ui/SelectCore/SelectCore.module.css","components/ui/Select/Select.module.css","components/ui/Tabs/Tabs.module.css","components/ui/Icon/assets sync /^/.//.*/.svg$","components/ui/Icon/assets/fabric.svg","components/ui/Icon/assets/forge.svg","components/ui/Icon/assets/minecraft.svg","components/ui/Empty/Empty.module.css","components/ui/Empty/assets/undraw_empty_re_opql.svg","components/ui/Empty/assets/undraw_selecting_re_5ff6.svg","utils/index.ts","components/ui/SelectCore/index.tsx","components/ui/Icon/index.tsx","components/ui/SelectIcon/index.tsx","components/ui/SelectCoreOption/index.tsx","components/ui/Button/index.tsx","app/hooks.ts","modules/game-versions/gameVersionsSlice.ts","modules/game-versions/gameVersionsAPI.ts","modules/cores/coresAPI.ts","modules/cores/coresSlice.ts","components/ui/Empty/index.tsx","components/ui/SelectOption/index.tsx","components/ui/Select/index.tsx","modules/cores/CoreSelect.tsx","modules/cores/Cores.tsx","modules/version-types/versionTypesSlice.ts","modules/version-types/versionTypesAPI.ts","modules/game-versions/utils.ts","modules/game-versions/GameVersions.tsx","components/ui/Tabs/index.tsx","components/ui/Tab/index.tsx","modules/version-types/utils.ts","modules/version-types/VersionTypes.tsx","modules/servers/serversAPI.ts","modules/servers/serversSlice.ts","modules/servers/CreateServer.tsx","components/App/Rana-logo.svg","modules/servers/ServersList.tsx","components/App/App.tsx","modules/counter/counterAPI.ts","modules/counter/counterSlice.ts","app/store.ts","vendors/serviceWorker.ts","index.tsx"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","CoreType","SelectCore","defaultId","children","onChange","useState","currentId","setCurrentId","handleClick","selectId","className","cn","styles","selectCore","Children","selectCoreOption","React","cloneElement","active","props","type","onClick","Icon","name","iconSVGSrc","require","default","src","ICON_COLORS","minecraft","forge","fabric","SelectIcon","size","selectIcon","style","background","SelectCoreOption","role","title","description","apiClient","client","axios","create","baseURL","interceptors","request","use","config","message","url","console","log","createApiClient","ButtonType","useAppDispatch","useDispatch","useAppSelector","useSelector","fetchGameVersionsAC","createAsyncThunk","a","get","response","data","gameVersionSlice","createSlice","initialState","values","current","status","reducers","setCurrentGameVersion","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","selectGameVersions","gameVersions","selectCurrentGameVersion","fetchForgeCores","gameVersion","params","version","fetchFabricCores","fetchForgeCoresAC","fetchFabricCoresAC","coresSlice","value","setCoreType","setCurrentCore","selectCores","cores","selectCoreType","selecCurrentCore","Empty","select","text","textOnly","emptyIconSVG","selectIconSVG","empty","icon","withText","SelectOption","selectOption","Select","CoreSelect","onSelect","length","coreVersion","selectedCore","find","core","Cores","dispatch","currentCoreType","currentVersion","useEffect","Forge","Fabric","fetchVersionTypesAC","versionTypesSlice","setCurrentVersionType","selectVersionTypes","versionTypes","selectCurrentVersionType","formatVersions","versions","filter","includes","filterVersions","slice","sort","b","parseInt","sortVersions","GameVersions","allGameVersions","versionType","Tabs","tabId","tabs","tab","Tab","formatTypes","TYPES_TO_REMOVE","filterTypes","sortTypes","VersionTypes","toString","replace","trim","Button","Primary","button","createServer","server","post","body","fetchServersAC","createServerAC","serversSlice","setCurrentServerId","selectServers","servers","CreateServer","currentGameVersion","currentCore","section","installerUrl","mods","ServersList","JSON","stringify","App","RanaLogo","alt","href","target","rel","fetchCount","amount","Promise","setTimeout","incrementAsync","counterSlice","increment","decrement","incrementByAmount","store","configureStore","reducer","counter","counterReducer","versionTypesReducer","gameVersionsReducer","coresReducer","serversReducer","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb0f547c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"createServer\":\"CreateServer_createServer__14lG6\",\"section\":\"CreateServer_section__ik-EW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectCoreOption\":\"SelectCoreOption_selectCoreOption__29r4T\",\"title\":\"SelectCoreOption_title__1Fr85\",\"description\":\"SelectCoreOption_description__37Yqq\",\"active\":\"SelectCoreOption_active__2y8dB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectOption\":\"SelectOption_selectOption__3wFIX\",\"text\":\"SelectOption_text__2Z4ct\",\"active\":\"SelectOption_active__2M927\",\"size-s\":\"SelectOption_size-s__3mBdH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"Tab_tab__1RLCt\",\"text\":\"Tab_text__3dBtp\",\"active\":\"Tab_active__25CVG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectIcon\":\"SelectIcon_selectIcon___wVAP\",\"size-l\":\"SelectIcon_size-l__tO94y\",\"size-xs\":\"SelectIcon_size-xs__KVcML\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1DuDf\",\"type-primary\":\"Button_type-primary__Ee3oc\",\"type-secondary\":\"Button_type-secondary__3PdLd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectCore\":\"SelectCore_selectCore__38_r6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__2W7Me\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"Tabs_tabs__25ZZ7\"};","var map = {\n\t\"./fabric.svg\": 51,\n\t\"./forge.svg\": 52,\n\t\"./minecraft.svg\": 53\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 50;","export default __webpack_public_path__ + \"static/media/fabric.56e2de4a.svg\";","export default __webpack_public_path__ + \"static/media/forge.07e53dac.svg\";","export default __webpack_public_path__ + \"static/media/minecraft.5155d004.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empty\":\"Empty_empty__95ytc\",\"size-l\":\"Empty_size-l__2qUML\",\"size-m\":\"Empty_size-m__1XvaW\",\"size-s\":\"Empty_size-s__2q-og\",\"withText\":\"Empty_withText__3lbmy\",\"icon\":\"Empty_icon__2xkrz\",\"title\":\"Empty_title__20F1s\",\"textOnly\":\"Empty_textOnly__2sZak\"};","export default __webpack_public_path__ + \"static/media/undraw_empty_re_opql.065a942a.svg\";","export default __webpack_public_path__ + \"static/media/undraw_selecting_re_5ff6.1aa4d00f.svg\";","import axios from \"axios\";\n\n// TODO: prod / dev envs\nconst API_URL = 'http://localhost:3001/';\n\nexport const log = (message: string) => {\n  console.log(`[WEB]: ${message}`);\n};\n\nexport const createApiClient = () => {\n  const client = axios.create({\n    baseURL: API_URL\n  });\n\n  client.interceptors.request.use((config) => {\n    log(`Request to origin: ${config.baseURL}${config.url}`);\n    return config;\n  });\n\n  return client;\n};\n\nexport const apiClient = createApiClient();\n\n// TODO: fix import from @rana-mc/db with isolatedModules?\nexport const enum CoreType {\n  Forge = 'forge',\n  Fabric = 'fabric',\n}\n","import React, { Children, useState } from 'react';\nimport cn from 'classnames';\n\nimport styles from './SelectCore.module.css';\n\ntype Props = {\n  children: React.ReactElement | React.ReactElement[];\n  defaultId?: string;\n  onChange?: (selectId: string) => void;\n};\n\nconst SelectCore = ({ defaultId, children, onChange }: Props) => {\n  const [currentId, setCurrentId] = useState<string>(defaultId || '');\n\n  const handleClick = (selectId: string) => {\n    setCurrentId(selectId);\n    onChange && onChange(selectId);\n  };\n\n  return (\n    <div className={cn(styles.selectCore)}>\n      {Children.map(children, (selectCoreOption) => {\n        return React.cloneElement(selectCoreOption, {\n          active: currentId === selectCoreOption.props.type,\n          onClick: handleClick,\n        });\n      })}\n    </div>\n  );\n};\n\nexport default SelectCore;\n","import React from 'react';\nimport { ReactSVG } from 'react-svg';\n\nexport type IconName = 'minecraft' | 'forge' | 'fabric';\n\ntype Props = {\n  name: IconName;\n};\n\nconst Icon = ({ name }: Props) => {\n  const iconSVGSrc = require(`./assets/${name}.svg`).default;\n\n  return <ReactSVG src={iconSVGSrc} />;\n};\n\nexport default Icon;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './SelectIcon.module.css';\nimport Icon, { IconName } from '@ui/Icon';\n\ntype Props = {\n  name: IconName;\n  size?: 'xs' | 's' | 'l';\n};\n\nconst ICON_COLORS = {\n  minecraft: '#D8D8D8',\n  forge: '#202C44',\n  fabric: '#BADCBA',\n};\n\nconst SelectIcon = ({ name, size }: Props) => {\n  return (\n    <div\n      className={cn(styles.selectIcon, styles[`size-${size}`])}\n      style={{ background: ICON_COLORS[name] || 'transparent' }}>\n      <Icon name={name} />\n    </div>\n  );\n};\n\nexport default SelectIcon;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport SelectIcon from '@ui/SelectIcon';\n\nimport styles from './SelectCoreOption.module.css';\n\ntype Props = {\n  type: 'forge' | 'fabric';\n  onClick?: (coreId: string) => void;\n  active?: boolean;\n};\n\n// TODO: remove as hardcoded\nconst SelectCoreOption = ({ type, onClick, active }: Props) => {\n  const handleClick = () => onClick && onClick(type);\n\n  return (\n    <div\n      role=\"presentation\"\n      className={cn(styles.selectCoreOption, { [styles.active]: active })}\n      onClick={handleClick}>\n      <SelectIcon name={type} size=\"l\" />\n      <div className={cn(styles.title)}>\n        {type === 'forge' && <b>Forge</b>}\n        {type === 'fabric' && <b>Fabric</b>}\n      </div>\n      <div className={cn(styles.description)}>\n        {type === 'forge' && <span>Popular choice</span>}\n        {type === 'fabric' && <span>Lightweight</span>}\n      </div>\n    </div>\n  );\n};\n\nexport default SelectCoreOption;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './Button.module.css';\n\nexport const enum ButtonType {\n  Primary = 'primary',\n  Secondary = 'secondary',\n}\n\ntype Props = {\n  type?: ButtonType;\n  onClick?: () => void;\n  text?: string;\n};\n\nconst Button = ({ type = ButtonType.Primary, onClick, text = '' }: Props) => {\n  const handleClick = () => onClick && onClick();\n\n  return (\n    <button\n      className={cn(styles.button, styles[`type-${type}`])}\n      onClick={handleClick}>\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport { fetchGameVersions } from \"./gameVersionsAPI\";\n\nexport interface GameVersionsState {\n  values: GameVersion[] | null;\n  current: string | null;\n  status: 'idle' | 'loading' | 'failed';\n};\n\nconst initialState: GameVersionsState = {\n  values: null,\n  current: null,\n  status: 'idle',\n};\n\nexport const fetchGameVersionsAC = createAsyncThunk(\n  'game-versions/fetch',\n  async () => {\n    const response = await fetchGameVersions();\n    return response.data;\n  }\n);\n\nexport const gameVersionSlice = createSlice({\n  name: 'gameVersions',\n  initialState,\n  reducers: {\n    setCurrentGameVersion: (state, action: PayloadAction<string>) => {\n      state.current = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchGameVersionsAC.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchGameVersionsAC.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.values = action.payload;\n      });\n  },\n});\n\nexport const { setCurrentGameVersion } = gameVersionSlice.actions;\n\nexport const selectGameVersions = (state: RootState) => state.gameVersions.values;\nexport const selectCurrentGameVersion = (state: RootState) => state.gameVersions.current;\n\nexport default gameVersionSlice.reducer;","import { apiClient } from \"@utils\";\n\nexport const fetchGameVersions = () => {\n  return apiClient.get('/api/versions');\n};","import { apiClient } from \"@utils\";\n\nexport const fetchForgeCores = (gameVersion: string) => {\n  return apiClient.get('/api/forge-cores', { params: { version: gameVersion } });\n};\n\n\nexport const fetchFabricCores = (gameVersion: string) => {\n  return apiClient.get('/api/fabric-cores', { params: { version: gameVersion } });\n};","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { CoreType } from \"@utils\";\nimport { RootState } from \"../../app/store\";\nimport { fetchForgeCores, fetchFabricCores } from \"./coresAPI\";\n\ntype Core = ForgeCore | FabricCore;\n\nexport interface CoresState {\n  value: Core[] | null;\n  type: CoreType.Forge | CoreType.Fabric | null;\n  current: Core | null;\n  status: 'idle' | 'loading' | 'failed';\n};\n\nconst initialState: CoresState = {\n  value: null,\n  type: null,\n  current: null,\n  status: 'idle',\n};\n\n// TODO: save cores for all versions, like { [version]: core }\nexport const fetchForgeCoresAC = createAsyncThunk(\n  'cores/fetch-forge',\n  async (gameVersion: string) => {\n    const response = await fetchForgeCores(gameVersion);\n    return response.data;\n  }\n);\n\nexport const fetchFabricCoresAC = createAsyncThunk(\n  'cores/fetch-fabric',\n  async (gameVersion: string) => {\n    const response = await fetchFabricCores(gameVersion);\n    return response.data;\n  }\n);\n\nexport const coresSlice = createSlice({\n  name: 'cores',\n  initialState,\n  reducers: {\n    setCoreType: (state, action: PayloadAction<CoreType>) => {\n      state.type = action.payload;\n    },\n    setCurrentCore: (state, action: PayloadAction<Core>) => {\n      state.current = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchForgeCoresAC.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchForgeCoresAC.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value = action.payload;\n      })\n      .addCase(fetchFabricCoresAC.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchFabricCoresAC.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value = action.payload;\n      });\n  },\n});\n\nexport const { setCoreType, setCurrentCore } = coresSlice.actions;\n\nexport const selectCores = (state: RootState) => state.cores.value;\nexport const selectCoreType = (state: RootState) => state.cores.type;\nexport const selecCurrentCore = (state: RootState) => state.cores.current;\n\nexport default coresSlice.reducer;","import React from 'react';\nimport { ReactSVG } from 'react-svg';\nimport cn from 'classnames';\n\nimport styles from './Empty.module.css';\n\ntype Props = {\n  select?: boolean;\n  size?: 's' | 'm' | 'l';\n  text?: string;\n  textOnly?: boolean;\n};\n\nconst Empty = ({\n  select = false,\n  size = 'm',\n  text = '',\n  textOnly = false,\n}: Props) => {\n  const emptyIconSVG = require(`./assets/undraw_empty_re_opql.svg`).default;\n  const selectIconSVG =\n    require(`./assets/undraw_selecting_re_5ff6.svg`).default;\n\n  if (textOnly) {\n    return (\n      <div\n        className={cn(styles.empty, styles[`size-${size}`], {\n          [styles.textOnly]: textOnly,\n        })}>\n        {text && (\n          <span className={cn(styles.title)}>\n            {text} {select ? '😏' : '😓'}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  if (select) {\n    return (\n      <div className={cn(styles.empty, styles[`size-${size}`])}>\n        <div className={cn(styles.icon)}>\n          <ReactSVG\n            className={cn({ [styles.withText]: text })}\n            src={selectIconSVG}\n          />\n        </div>\n        {text && <span className={cn(styles.title)}>{text} 😏</span>}\n      </div>\n    );\n  }\n\n  return (\n    <div className={cn(styles.empty, styles[`size-${size}`])}>\n      <div className={cn(styles.icon)}>\n        <ReactSVG\n          className={cn({ [styles.withText]: text })}\n          src={emptyIconSVG}\n        />\n      </div>\n      {text && <span className={cn(styles.title)}>{text} 😓</span>}\n    </div>\n  );\n};\n\nexport default Empty;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './SelectOption.module.css';\nimport { IconName } from '@ui/Icon';\nimport SelectIcon from '@ui/SelectIcon';\n\ntype Props = {\n  icon?: IconName;\n  id: string;\n  size?: 's' | 'm';\n  text?: string;\n  onClick?: (selectId: string) => void;\n  active?: boolean;\n};\n\nconst SelectOption = ({\n  icon,\n  id,\n  size = 'm',\n  text,\n  onClick,\n  active,\n}: Props) => {\n  const handleClick = () => onClick && onClick(id);\n\n  return (\n    <div\n      role=\"presentation\"\n      className={cn(styles.selectOption, styles[`size-${size}`], {\n        [styles.active]: active,\n      })}\n      onClick={handleClick}>\n      {icon && <SelectIcon size={size === 'm' ? 's' : 'xs'} name={icon} />}\n      <span className={cn(styles.text)}>{text}</span>\n    </div>\n  );\n};\n\nexport default SelectOption;\n","import React, { Children, useState } from 'react';\nimport cn from 'classnames';\n\nimport styles from './Select.module.css';\n\ntype Props = {\n  children: React.ReactElement | React.ReactElement[];\n  defaultId?: string;\n  onChange?: (selectId: string) => void;\n};\n\nconst Select = ({ defaultId, children, onChange }: Props) => {\n  const [currentId, setCurrentId] = useState<string>(defaultId || '');\n\n  const handleClick = (selectId: string) => {\n    setCurrentId(selectId);\n    onChange && onChange(selectId);\n  };\n\n  return (\n    <div className={cn(styles.select)}>\n      {Children.map(children, (selectOption) => {\n        return React.cloneElement(selectOption, {\n          active: currentId === selectOption.props.id,\n          onClick: handleClick,\n        });\n      })}\n    </div>\n  );\n};\n\nexport default Select;\n","import React from 'react';\nimport Empty from '@ui/Empty';\nimport SelectOption from '@ui/SelectOption';\nimport Select from '@ui/Select';\nimport { CoreType } from '@utils';\n\ntype Props = {\n  type: CoreType;\n  cores: ForgeCore[] | FabricCore[] | null;\n  onSelect?: (core: ForgeCore | FabricCore) => void;\n};\n\nconst CoreSelect = ({ type, cores, onSelect }: Props) => {\n  const hasCores = cores && cores.length > 0;\n\n  if (!hasCores) {\n    return <Empty />;\n  }\n\n  const handleChange = (coreVersion: string) => {\n    const selectedCore = cores.find((core) => core.coreVersion === coreVersion);\n    if (selectedCore) onSelect && onSelect(selectedCore);\n  };\n\n  return (\n    <Select onChange={handleChange}>\n      {cores.map((core) => (\n        <SelectOption\n          icon={type}\n          size=\"s\"\n          key={core.coreVersion}\n          id={core.coreVersion}\n          text={core.coreVersion}\n        />\n      ))}\n    </Select>\n  );\n};\n\nexport default CoreSelect;\n","import React, { useEffect } from 'react';\nimport SelectCore from '@ui/SelectCore';\nimport SelectCoreOption from '@ui/SelectCoreOption';\nimport { CoreType } from '@utils';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { selectCurrentGameVersion } from '../game-versions/gameVersionsSlice';\n\nimport {\n  fetchForgeCoresAC,\n  fetchFabricCoresAC,\n  setCoreType,\n  selectCores,\n  selectCoreType,\n  setCurrentCore,\n} from './coresSlice';\nimport CoreSelect from './CoreSelect';\n\nconst Cores = () => {\n  const dispatch = useAppDispatch();\n\n  const cores = useAppSelector(selectCores);\n  const currentCoreType = useAppSelector(selectCoreType);\n  const currentVersion = useAppSelector(selectCurrentGameVersion);\n\n  useEffect(() => {\n    if (currentVersion) {\n      if (currentCoreType === CoreType.Forge)\n        dispatch(fetchForgeCoresAC(currentVersion));\n      if (currentCoreType === CoreType.Fabric)\n        dispatch(fetchFabricCoresAC(currentVersion));\n    }\n  }, [dispatch, currentVersion, currentCoreType]);\n\n  const handleChange = (id: string) => {\n    dispatch(setCoreType(id as CoreType));\n  };\n\n  const handleSelect = (core: ForgeCore | FabricCore) => {\n    dispatch(setCurrentCore(core));\n  };\n\n  return (\n    <div>\n      <SelectCore onChange={handleChange}>\n        <SelectCoreOption type=\"forge\" />\n        <SelectCoreOption type=\"fabric\" />\n      </SelectCore>\n      {currentCoreType && (\n        <CoreSelect\n          type={currentCoreType}\n          cores={cores}\n          onSelect={handleSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Cores;\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport { fetchVersionTypes } from \"./versionTypesAPI\";\n\nexport interface VersionTypesState {\n  values: VersionType[] | null;\n  current: number | null;\n  status: 'idle' | 'loading' | 'failed';\n};\n\nconst initialState: VersionTypesState = {\n  values: null,\n  current: null,\n  status: 'idle',\n};\n\nexport const fetchVersionTypesAC = createAsyncThunk(\n  'version-types/fetch',\n  async () => {\n    const response = await fetchVersionTypes();\n    return response.data;\n  }\n);\n\nexport const versionTypesSlice = createSlice({\n  name: 'versionTypes',\n  initialState,\n  reducers: {\n    setCurrentVersionType: (state, action: PayloadAction<number>) => {\n      state.current = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchVersionTypesAC.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchVersionTypesAC.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.values = action.payload;\n      });\n  },\n});\n\nexport const { setCurrentVersionType } = versionTypesSlice.actions;\n\nexport const selectVersionTypes = (state: RootState) => state.versionTypes.values;\nexport const selectCurrentVersionType = (state: RootState) => state.versionTypes.current;\n\nexport default versionTypesSlice.reducer;","import { apiClient } from \"@utils\";\n\nexport const fetchVersionTypes = () => {\n  return apiClient.get('/api/version-types');\n};","export const sortVersions = (versions: string[]) => {\n  return versions.slice().sort((a, b) => {\n    return parseInt(b) - parseInt(a)\n  });\n};\n\nexport const filterVersions = (versions: string[]) => {\n  return versions.filter((version) => {\n    return !version.includes('Snapshot');\n  });\n};\n\nexport const formatVersions = (versions: string[]) => {\n  return filterVersions(sortVersions(versions));\n}","import React, { useEffect } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport {\n  fetchGameVersionsAC,\n  selectGameVersions,\n  setCurrentGameVersion,\n} from './gameVersionsSlice';\n\nimport { selectCurrentVersionType } from '../version-types/versionTypesSlice';\nimport SelectOption from '@ui/SelectOption';\nimport Select from '@ui/Select';\nimport Empty from '@ui/Empty';\nimport { formatVersions } from './utils';\n\nconst GameVersions = () => {\n  const dispatch = useAppDispatch();\n  const allGameVersions = useAppSelector(selectGameVersions);\n  const versionType = useAppSelector(selectCurrentVersionType);\n\n  const gameVersion = allGameVersions?.find(\n    (gameVersion) => gameVersion.type === versionType\n  );\n\n  useEffect(() => {\n    if (!gameVersion) dispatch(fetchGameVersionsAC());\n  }, [dispatch, gameVersion]);\n\n  if (!gameVersion) {\n    return (\n      <Empty textOnly select size=\"s\" text=\"Please, select game version\" />\n    );\n  }\n\n  if (gameVersion?.versions?.length === 0) {\n    return <Empty size=\"s\" text=\"Has no available game versions\" />;\n  }\n\n  const handleChange = (id: string) => {\n    dispatch(setCurrentGameVersion(id));\n  };\n\n  return (\n    <div>\n      <Select onChange={handleChange}>\n        {formatVersions(gameVersion.versions).map((version) => (\n          <SelectOption\n            key={version}\n            id={version}\n            icon=\"minecraft\"\n            text={version}\n          />\n        ))}\n      </Select>\n    </div>\n  );\n};\n\nexport default GameVersions;\n","import React, { Children, useState } from 'react';\nimport cn from 'classnames';\n\nimport styles from './Tabs.module.css';\n\ntype Props = {\n  children: React.ReactElement | React.ReactElement[];\n  defaultId?: string;\n  onChange?: (tabId: string) => void;\n};\n\nconst Tabs = ({ defaultId, children, onChange }: Props) => {\n  const [currentId, setCurrentId] = useState<string>(defaultId || '');\n\n  const handleClick = (tabId: string) => {\n    setCurrentId(tabId);\n    onChange && onChange(tabId);\n  };\n\n  return (\n    <div className={cn(styles.tabs)}>\n      {Children.map(children, (tab) => {\n        return React.cloneElement(tab, {\n          active: currentId === tab.props.id,\n          onClick: handleClick,\n        });\n      })}\n    </div>\n  );\n};\n\nexport default Tabs;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './Tab.module.css';\n\ntype Props = {\n  id: string;\n  text: string;\n  onClick?: (tabId: string) => void;\n  active?: boolean;\n};\n\nconst Tab = ({ id, text, active, onClick }: Props) => {\n  const handleClick = () => onClick && onClick(id);\n\n  return (\n    <div\n      className={cn(styles.tab, { [styles.active]: active })}\n      onClick={handleClick}>\n      <span className={cn(styles.text)}>{text}</span>\n    </div>\n  );\n};\n\nexport default Tab;\n","export const formatName = (name: string) => {\n  return name.replace(/Minecraft/i, '').trim();\n};\n\nexport const sortTypes = (versionTypes: VersionType[]) => {\n  return versionTypes.slice().sort((a, b) => {\n    return b?.id - a?.id;\n  });\n};\n\nexport const filterTypes = (versionTypes: VersionType[]) => {\n  const TYPES_TO_REMOVE = ['Bukkit', 'Modloader', 'Addons', 'Minecraft Beta'];\n  return versionTypes.filter((type) => {\n    return !TYPES_TO_REMOVE.includes(type.name);\n  });\n};\n\nexport const formatTypes = (versionTypes: VersionType[]) => {\n  return filterTypes(sortTypes(versionTypes));\n}","import React, { useEffect } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport {\n  fetchVersionTypesAC,\n  selectVersionTypes,\n  setCurrentVersionType,\n} from './versionTypesSlice';\nimport Tabs from '@ui/Tabs';\nimport Tab from '@ui/Tab';\nimport { formatName, formatTypes } from './utils';\nimport Empty from '@ui/Empty';\n\nconst VersionTypes = () => {\n  const dispatch = useAppDispatch();\n  const versionTypes = useAppSelector(selectVersionTypes);\n\n  useEffect(() => {\n    if (!versionTypes) dispatch(fetchVersionTypesAC());\n  }, [dispatch, versionTypes]);\n\n  if (!versionTypes) {\n    return <Empty textOnly size=\"s\" text=\"Has no available game versions\" />;\n  }\n\n  if (versionTypes?.length === 0) {\n    return <Empty size=\"s\" text=\"Has no available game versions\" />;\n  }\n\n  const handleChange = (id: string) => {\n    dispatch(setCurrentVersionType(parseInt(id)));\n  };\n\n  return (\n    <div>\n      <Tabs onChange={handleChange}>\n        {formatTypes(versionTypes)?.map((versionType) => (\n          <Tab\n            key={versionType.id.toString()}\n            id={versionType.id.toString()}\n            text={formatName(versionType.name)}\n          />\n        ))}\n      </Tabs>\n    </div>\n  );\n};\n\nexport default VersionTypes;\n","import { apiClient } from \"@utils\";\n\nexport const fetchServers = () => {\n  return apiClient.get('/api/servers');\n};\n\nexport const createServer = (server: Server) => {\n  return apiClient.post('/api/servers', { body: server });\n};","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport { fetchServers, createServer } from \"./serversAPI\";\n\nexport interface ServersState {\n  values: Server[] | null;\n  currentId: string | null;\n  status: 'idle' | 'loading' | 'failed';\n};\n\nconst initialState: ServersState = {\n  values: null,\n  currentId: null,\n  status: 'idle',\n};\n\nexport const fetchServersAC = createAsyncThunk(\n  'servers/fetch',\n  async () => {\n    const response = await fetchServers();\n    return response.data;\n  }\n);\n\nexport const createServerAC = createAsyncThunk(\n  'servers/create',\n  async (server: Server) => {\n    const response = await createServer(server);\n    return response.data;\n  }\n);\n\nexport const serversSlice = createSlice({\n  name: 'servers',\n  initialState,\n  reducers: {\n    setCurrentServerId: (state, action: PayloadAction<string>) => {\n      state.currentId = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchServersAC.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchServersAC.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.values = action.payload;\n      })\n      .addCase(createServerAC.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(createServerAC.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.values = action.payload;\n      });\n  },\n});\n\nexport const { setCurrentServerId } = serversSlice.actions;\n\nexport const selectServers = (state: RootState) => state.servers.values;\nexport const selectCurrentServerId = (state: RootState) => state.servers.currentId;\nexport const selectCurrentServer = (state: RootState) => {\n  return state.servers.values ? state.servers.values.find(server => state.servers.currentId) : null;\n}\n\nexport default serversSlice.reducer;","import React from 'react';\nimport cn from 'classnames';\n\nimport Cores from '@modules/cores/Cores';\nimport GameVersions from '@modules/game-versions/GameVersions';\nimport VersionTypes from '@modules/version-types/VersionTypes';\nimport Button from '@ui/Button';\n\nimport styles from './CreateServer.module.css';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { createServerAC } from './serversSlice';\nimport { selectCurrentGameVersion } from '@modules/game-versions/gameVersionsSlice';\nimport { selecCurrentCore } from '@modules/cores/coresSlice';\n\nconst CreateServer = () => {\n  const dispatch = useAppDispatch();\n  const currentGameVersion = useAppSelector(selectCurrentGameVersion);\n  const currentCore = useAppSelector(selecCurrentCore);\n\n  const handleCreate = () => {\n    if (currentGameVersion && currentCore) {\n      const server: Server = {\n        id: 'test',\n        name: 'Test Server',\n        gameVersion: currentGameVersion,\n        coreVersion: currentCore?.coreVersion,\n        installerUrl: currentCore?.installerUrl,\n        mods: [],\n      };\n\n      dispatch(createServerAC(server));\n    }\n  };\n\n  return (\n    <div className={cn(styles.createServer)}>\n      <section className={cn(styles.section)}>\n        <VersionTypes />\n      </section>\n      <section className={cn(styles.section)}>\n        <GameVersions />\n      </section>\n      <section className={cn(styles.section)}>\n        <Cores />\n      </section>\n      <section className={cn(styles.section)}>\n        <Button text=\"Create Server\" onClick={handleCreate} />\n      </section>\n    </div>\n  );\n};\n\nexport default CreateServer;\n","export default __webpack_public_path__ + \"static/media/Rana-logo.872c4962.svg\";","import { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport React, { useEffect } from 'react';\nimport { fetchServersAC, selectServers } from './serversSlice';\n\nconst ServersList = () => {\n  const dispatch = useAppDispatch();\n  const servers = useAppSelector(selectServers);\n\n  useEffect(() => {\n    if (!servers) dispatch(fetchServersAC());\n  }, [dispatch, servers]);\n\n  return <div>{JSON.stringify(servers)}</div>;\n};\n\nexport default ServersList;\n","import React from 'react';\nimport CreateServer from '@modules/servers/CreateServer';\n\nimport './App.css';\nimport RanaLogo from './Rana-logo.svg';\nimport ServersList from '@modules/servers/ServersList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={RanaLogo} className=\"App-logo\" alt=\"rana mc logo\" />\n        <ServersList />\n        <CreateServer />\n        <section className=\"HowToUse\">\n          <span>Learn </span>\n          <a\n            className=\"HowToUser-link\"\n            href=\"/docs\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n            How To Use Rana MC\n          </a>\n        </section>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from '../modules/counter/counterSlice';\nimport versionTypesReducer from '../modules/version-types/versionTypesSlice';\nimport gameVersionsReducer from '../modules/game-versions/gameVersionsSlice';\nimport coresReducer from '../modules/cores/coresSlice';\nimport serversReducer from '../modules/servers/serversSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    versionTypes: versionTypesReducer,\n    gameVersions: gameVersionsReducer,\n    cores: coresReducer,\n    servers: serversReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL || '', window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { bootstrap } from './vendors/bootstrap';\n\nbootstrap();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}